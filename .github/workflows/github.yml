# Nombre del workflow
name: Desplegar en Servidor con PM2 y Ecosystem File

# Disparadores: se ejecuta en cada push o pull request a la rama main
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Trabajos a ejecutar
jobs:
  build-and-deploy:
    # Se ejecuta en tu propio servidor (self-hosted runner)
    runs-on: self-hosted
    
    # Define el directorio de despliegue para fácil referencia
    env:
      DEPLOY_DIR: /var/www/jsravelo

    steps:
      # 1. Descarga el código más reciente del repositorio
      - name: Checkout del código
        uses: actions/checkout@v4

      # 2. Sincroniza los archivos al directorio de despliegue
      - name: Sincronizar archivos al directorio de despliegue
        run: |
          mkdir -p ${{ env.DEPLOY_DIR }}
          rsync -av --delete ./ ${{ env.DEPLOY_DIR }}/

      # 3. Crea un archivo .env en el directorio de despliegue con los secretos
      - name: Crear archivo .env
        run: |
          echo "NODE_ENV=production" > ${{ env.DEPLOY_DIR }}/.env
          echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> ${{ env.DEPLOY_DIR }}/.env
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> ${{ env.DEPLOY_DIR }}/.env
          echo "SMTP_SECURE=${{ secrets.SMTP_SECURE }}" >> ${{ env.DEPLOY_DIR }}/.env
          echo "SMTP_USER=${{ secrets.SMTP_USER }}" >> ${{ env.DEPLOY_DIR }}/.env
          echo "SMTP_PASS=${{ secrets.SMTP_PASS }}" >> ${{ env.DEPLOY_DIR }}/.env
          echo "SMTP_FROM=${{ secrets.SMTP_FROM }}" >> ${{ env.DEPLOY_DIR }}/.env
          echo "SMTP_TO=${{ secrets.SMTP_TO }}" >> ${{ env.DEPLOY_DIR }}/.env
          echo "MY_GITHUB_TOKEN=${{ secrets.MY_GITHUB_TOKEN }}" >> ${{ env.DEPLOY_DIR }}/.env

      # 4. Configura Node.js para que los comandos de npm estén disponibles
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22' # O la versión que necesites, ej: 'lts/*'

      # 5. Instala las dependencias y construye el proyecto
      - name: Instalar dependencias y construir proyecto
        run: |
          cd ${{ env.DEPLOY_DIR }}
          npm install
          npm run build

      # 6. Inicia o reinicia la aplicación usando PM2
      - name: Iniciar o reiniciar aplicación con PM2
        run: |
          cd ${{ env.DEPLOY_DIR }}
          # Usar 'npx' es más robusto ya que utiliza la versión de PM2 del proyecto
          # o la última disponible, evitando problemas con el PATH del runner.
          npx pm2 startOrRestart ecosystem.config.js
          npx pm2 save
