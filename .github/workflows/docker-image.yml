name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: self-hosted
    env:
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_SECURE: ${{ secrets.SMTP_SECURE }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      SMTP_FROM: ${{ secrets.SMTP_FROM }}
      SMTP_TO: ${{ secrets.SMTP_TO }}

      MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v4

      - name: Construir imagen Docker
        run: docker build -t my-image-name:latest -f Dockerfile .

      - name: Detener contenedor anterior (si existe)
        run: |
          docker stop my-app || true
          docker rm my-app || true

      - name: Ejecutar contenedor nuevo con variables de entorno
        run: |
          docker run -d -p 3000:3000 --name my-app \
            -e SMTP_HOST=${SMTP_HOST} \
            -e SMTP_PORT=${SMTP_PORT} \
            -e SMTP_SECURE=${SMTP_SECURE} \
            -e SMTP_USER=${SMTP_USER} \
            -e SMTP_PASS=${SMTP_PASS} \
            -e SMTP_FROM=${SMTP_FROM} \
            -e SMTP_TO=${SMTP_TO} \
            -e MY_GITHUB_TOKEN=${MY_GITHUB_TOKEN} \
            my-image-name:latest
